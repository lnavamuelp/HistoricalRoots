import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
    id 'kotlin-parcelize'
    id 'com.google.dagger.hilt.android' version '2.41' apply false
}

android {
    namespace 'com.lnavamuelp.historicalroots'
    compileSdk 34

    defaultConfig {
        applicationId "com.lnavamuelp.historicalroots"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        viewBinding true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.2'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    // Android Ktx
    implementation "androidx.core:core-ktx:$ktx_version"

    // Lifecycle ktx extensions
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Jetpack Compose activity
    implementation "androidx.activity:activity-compose:$activity_compose_version"

    // Jetpack Compose Lifecycle Support
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$lifecycle_compose_version"

    // Jetpack Compose
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"

    // Jetpack Compose Navigation Support
    implementation "androidx.navigation:navigation-compose:$navigation_compose_version"

    // Jetpack Compose ViewModel support
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$viewmodel_compose_version"

    // Material3
    implementation "androidx.compose.material3:material3:$material3_version"
    implementation("androidx.compose.material3:material3-window-size-class:$material3_version")

    // Jetpack Compose Material icons
    implementation "androidx.compose.material:material-icons-extended:$compose_material_icons_version"

    //Coil Image
    implementation "io.coil-kt:coil-compose:$coil_version"

    //Room
    implementation 'androidx.room:room-common:2.4.3'
    implementation "androidx.room:room-runtime:2.4.3"
    implementation "androidx.room:room-ktx:2.4.3"
    implementation "androidx.compose.runtime:runtime-livedata:1.6.0"
    implementation 'androidx.test:monitor:1.6.1'
    annotationProcessor "androidx.room:room-compiler:2.4.3"
    ksp("androidx.room:room-compiler:2.4.3")

    //HiltViewModel
    implementation("androidx.hilt:hilt-work:1.0.0")
    implementation("androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03")
    ksp("com.google.dagger:hilt-android-compiler:2.40.5")
    implementation("com.google.dagger:hilt-android:2.40.5")
    implementation("com.google.dagger:hilt-android-gradle-plugin:2.40.5")
    implementation("com.google.dagger:hilt-android-testing:2.40.5")
    implementation("androidx.hilt:hilt-navigation-fragment:1.0.0")

    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha07"
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0-alpha03"
    implementation "androidx.compose.runtime:runtime-livedata:1.6.0"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"


}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }
}